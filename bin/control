#!/bin/bash -eu

source $OPENSHIFT_CARTRIDGE_SDK_BASH

CPUMINER_BIN_DIR=${OPENSHIFT_CPUMINER_DIR}bin

cartridge_type="cpuminer"
version=2.4

# Check if the wildfly process is running
function isrunning() {

    # Check for running app
    pid=`pgrep -f "bin/minerd" 2> /dev/null`
	if [ -n "$pid"]; then
		return 0
	fi

    return 0
}

function start() {
  echo "Starting $cartridge_type cart"

  #Check for running app
  if isrunning; then
      echo "Application is already running"
  else
      #pushd ${OPENSHIFT_CPUMINER_DIR}cpuminer
      ${CPUMINER_BIN_DIR}/minerd --benchmark > ${OPENSHIFT_TMP_DIR}/${cartridge_type}.log 2>&1 &
      #popd
  fi
}

function build() {
    echo "Building CpuMiner"
}

function deploy() {
    echo "building CpuMiner"
}

function stop() {
  echo "Stopping $cartridge_type cart"

  if isrunning; then
      pid=`pgrep -f "bin/minerd" 2> /dev/null`
      echo "Sending SIGTERM to minerd:$pid ..." 1>&2
      kill -TERM $pid > /dev/null 2>&1
  fi
}

function restart() {
    echo "Restarting $cartridge_type cart"

    stop

    start
}

function status() {
   if isrunning
   then
      client_result "Application is running"
   else
      client_result "Application is either stopped or inaccessible"
   fi
}

function reload() {
    echo "Reloading $cartridge_type cart"
    restart
}

# Clean up any log files
function tidy() {
  client_message "Emptying log dir: $OPENSHIFT_CPUMINER_LOG_DIR"
  shopt -s dotglob
  rm -rf $OPENSHIFT_CPUMINER_LOG_DIR/*
}

case "$1" in
  build)           build ;;
  deploy)          deploy ;;
  start)           start ;;
  stop)            stop ;;
  restart)         restart ;;
  status)          status ;;
  reload)          reload ;;
  tidy)            tidy ;;
  *)               exit 0
esac
